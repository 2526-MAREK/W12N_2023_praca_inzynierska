// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testingEnvironmentApp.Data;

#nullable disable

namespace testingEnvironmentApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("testingEnvironmentApp.Models.Alarms.Alarm", b =>
                {
                    b.Property<int>("IdAlarm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlarm"));

                    b.Property<string>("ChannelIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdChannel")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurrenceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PossibleFault")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAlarm");

                    b.HasIndex("IdChannel");

                    b.ToTable("Alarms");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Channel", b =>
                {
                    b.Property<int>("IdChannel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChannel"));

                    b.Property<string>("ChannelIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Factor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDevice")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdChannel");

                    b.HasIndex("ChannelIdentifier")
                        .IsUnique();

                    b.HasIndex("IdDevice");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Device", b =>
                {
                    b.Property<int>("IdDevice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDevice"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdHub")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDevice");

                    b.HasIndex("DeviceIdentifier")
                        .IsUnique();

                    b.HasIndex("IdHub");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Hub", b =>
                {
                    b.Property<int>("IdHub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHub"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHub");

                    b.HasIndex("HubIdentifier")
                        .IsUnique();

                    b.ToTable("Hubs");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Msrt", b =>
                {
                    b.Property<int>("IdHubs")
                        .HasColumnType("int");

                    b.Property<int>("IdDevice")
                        .HasColumnType("int");

                    b.Property<int>("IdChannels")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataTimeMs")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateTimeZone")
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("MsrtValue")
                        .HasColumnType("float");

                    b.HasKey("IdHubs", "IdDevice", "IdChannels", "DataTimeMs", "DateTimeZone");

                    b.HasIndex("IdChannels");

                    b.HasIndex("IdDevice");

                    b.ToTable("Msrts");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.MsrtAssociation", b =>
                {
                    b.Property<int>("IdHubs")
                        .HasColumnType("int");

                    b.Property<int>("IdDevice")
                        .HasColumnType("int");

                    b.Property<int>("IdChannels")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataTimeMs")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateTimeZone")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAssociation")
                        .HasColumnType("int");

                    b.Property<int>("IdPoint")
                        .HasColumnType("int");

                    b.HasKey("IdHubs", "IdDevice", "IdChannels", "DataTimeMs", "DateTimeZone");

                    b.HasIndex("IdPoint");

                    b.ToTable("MsrtAssociations");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.MsrtPoint", b =>
                {
                    b.Property<int>("IdPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPoint"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Factor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MsrtPointIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPoint");

                    b.HasIndex("MsrtPointIdentifier")
                        .IsUnique();

                    b.ToTable("MsrtPoints");
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Alarms.Alarm", b =>
                {
                    b.HasOne("testingEnvironmentApp.Models.Channel", null)
                        .WithMany()
                        .HasForeignKey("IdChannel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Channel", b =>
                {
                    b.HasOne("testingEnvironmentApp.Models.Device", null)
                        .WithMany()
                        .HasForeignKey("IdDevice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Device", b =>
                {
                    b.HasOne("testingEnvironmentApp.Models.Hub", null)
                        .WithMany()
                        .HasForeignKey("IdHub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.Msrt", b =>
                {
                    b.HasOne("testingEnvironmentApp.Models.Channel", null)
                        .WithMany()
                        .HasForeignKey("IdChannels")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("testingEnvironmentApp.Models.Device", null)
                        .WithMany()
                        .HasForeignKey("IdDevice")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("testingEnvironmentApp.Models.Hub", null)
                        .WithMany()
                        .HasForeignKey("IdHubs")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("testingEnvironmentApp.Models.MsrtAssociation", b =>
                {
                    b.HasOne("testingEnvironmentApp.Models.MsrtPoint", null)
                        .WithMany()
                        .HasForeignKey("IdPoint")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testingEnvironmentApp.Models.Msrt", null)
                        .WithMany()
                        .HasForeignKey("IdHubs", "IdDevice", "IdChannels", "DataTimeMs", "DateTimeZone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
